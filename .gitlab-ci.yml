image: mcr.microsoft.com/dotnet/sdk:6.0

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - sonarqube
  - deploy

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - "dotnet restore vybes-backend.sln"
    - "dotnet build vybes-backend.sln"

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - "dotnet test vybes-backend.sln"

sonarqube-check-job:
  stage: sonarqube
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
      - "curl -f $SONAR_HOST_URL/api/system/status"
      - "apt-get update"
      - "apt-get install --yes openjdk-11-jre"
      - "dotnet tool install --global dotnet-sonarscanner"
      - "export PATH=\"$PATH:$HOME/.dotnet/tools\""
      - "dotnet sonarscanner begin /k:\"Vybes-backend\" /d:sonar.login=\"$SONAR_TOKEN\" /d:\"sonar.host.url=$SONAR_HOST_URL\" "
      - "dotnet build"
      - "dotnet sonarscanner end /d:sonar.login=\"$SONAR_TOKEN\""
  allow_failure: true
  only:
    - main # or the name of your main branch

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  image: gitlab/dind
  services:
    - docker:dind
  variables:
        DOCKER_HOST: tcp://docker:2375
        DOCKER_TLS_CERTDIR: ""
        DOCKER_DRIVER: overlay2
  script:
    - "docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD"
    - "cd ./ApiGateway"
    - "docker build -t pimvanhooren/vybes-api-gateway --no-cache ."
    - "docker push pimvanhooren/vybes-api-gateway"
    - "cd ./ProfileMicroservice"
    - "docker build -t pimvanhooren/vybes-profile-microservice --no-cache ."
    - "docker push pimvanhooren/vybes-profile-microservice"
    - "cd ./KrabbelMicroservice"
    - "docker build -t pimvanhooren/vybes-krabbel-microservice --no-cache ."
    - "docker push pimvanhooren/vybes-krabbel-microservice"
    - "echo 'The images have been successfully uploaded to Docker Hub'"